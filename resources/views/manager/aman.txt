old quotation form------------------------------------------------

@extends('manager.managerlayout')

@section('title', 'Create-Quote')

@section('content')
    <div class="min-h-screen m-3 rounded bg-white py-12">
        <div class="max-w-6xl mx-auto bg-white shadow-xl rounded-xl overflow-hidden">
            <h2 class="text-center text-2xl mb-4 underline">Quotation</h2>

            <div class="flex flex-col md:flex-row p-8 gap-8">
                <!-- Left Column -->
                <div class="w-full md:w-8/12">
                    <form action="{{ route('quotes.store') }}" method="post" class="space-y-6">
                        @csrf

                        <!-- Quote Info -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label>Quotation Number</label>
                                <input type="text" name="quotation_no"
                                    value="{{ old('quotation_no', $quotation_no ?? '') }}" readonly
                                    class="w-full border-b-2 py-2 px-1 bg-gray-50">
                                @error('quotation_no')<p class="text-red-500 text-xs">{{ $message }}</p>@enderror
                            </div>

                            <div>
                                <label>Quotation Date</label>
                                <input type="date" value="<?= date('Y-m-d')?>" name="quotation_date"
                                    class="w-full border-b-2 py-2 px-1 bg-gray-50">
                            </div>
                            <div>
                                <label>Valid Till</label>
                                <input type="date" name="valid_date" class="w-full border-b-2 py-2 px-1 bg-gray-50">
                                @error('valid_date')<p class="text-red-500 text-xs">{{ $message }}</p>@enderror
                            </div>
                            <div>
                                <label>Status</label>
                                <select name="status" class="w-full border-b-2 py-2 px-1 bg-gray-50">
                                    <option>Select Status</option>
                                    <option value="draft" selected>Draft</option>
                                    <option value="sent">Sent</option>
                                    <option value="accepted">Accepted</option>
                                    <option value="rejected">Rejected</option>
                                    <option value="cancelled">Cancelled</option>
                                </select>
                                @error('status')<p class="text-red-500 text-xs">{{ $message }}</p>@enderror
                            </div>
                        </div>

                        <!-- Customer -->
                        <div class="flex justify-between">
                            <div class="bg-blue-50 p-4 border rounded-lg space-y-4">
                                <h3 class="text-lg font-semibold text-gray-800">Customer Information</h3>
                                <select id="customerSelect" name="customer_id" class="w-full p-2 border rounded-lg">
                                    <option value="">Select Customer</option>
                                    @foreach($customers as $customer)
                                        <option value="{{ $customer->id }}">{{ $customer->name }}</option>
                                    @endforeach
                                </select>

                                @error('customer_id')<p class="text-red-500 text-xs">{{ $message }}</p>@enderror

                                <div class="flex items-center">
                                    <div class="flex-grow border-t"></div>
                                    <span class="mx-4 text-gray-500">OR</span>
                                    <div class="flex-grow border-t"></div>
                                </div>

                                <a href="{{ route('customer.index') }}"
                                    class="block w-full bg-blue-600 text-white py-2 rounded text-center hover:bg-blue-700">
                                    + Add New Customer
                                </a>
                            </div>
                            <div id="customer-info" class="bg-white p-4 border rounded-lg text-sm text-gray-700 hidden">
                                <p><strong>Address:</strong> <span id="customer-address"></span></p>
                                <p><strong>Email:</strong> <span id="customer-email"></span></p>
                                <p><strong>Phone:</strong> <span id="customer-phone"></span></p>
                            </div>

                        </div>

                        <div x-data="quotationForm()" class="space-y-4">
                            <template x-for="(item, index) in items" :key="index">
                                <div class="flex items-start gap-3 p-4 border rounded shadow">
                                    <!-- Action buttons remain the same -->
                                    <div class="flex flex-col items-center gap-2 pt-1 text-gray-400">
                                        <button type="button" @click="duplicateItem(index)" class="hover:text-green-500">
                                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                    d="M12 4v16m8-8H4" />
                                            </svg>
                                        </button>
                                        <button type="button" @click="removeItem(index)" class="hover:text-red-500">
                                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                    d="M6 18L18 6M6 6l12 12" />
                                            </svg>
                                        </button>
                                    </div>

                                    <div class="flex-1 grid grid-cols-1 md:grid-cols-2 gap-4">
                                        <div>
                                            <select :name="`items[${index}][product_id]`" x-model="item.product_id"
                                                @change="fetchProductDetails(index)"
                                                class="w-full border rounded px-2 py-2 text-sm">
                                                <option value="">Select Product</option>
                                                <template x-for="product in products" :key="product.id">
                                                    <option :value="product.id" x-text="product.name"></option>
                                                </template>
                                            </select>
                                            @error('items.*.product_id')<p class="text-red-500 text-xs">{{ $message }}</p>
                                            @enderror

                                            <textarea :name="`items[${index}][description]`" x-model="item.description"
                                                placeholder="Description"
                                                class="w-full h-20 border rounded px-2 py-1 mt-2 text-sm"></textarea>

                                            <input type="number" :name="`items[${index}][mrp]`" x-model="item.mrp"
                                                placeholder="MRP" class="w-full border rounded px-2 py-1 text-sm" />
                                            @error('items.*.mrp')<p class="text-red-500 text-xs">{{ $message }}</p>@enderror
                                        </div>

                                        <div class="grid grid-cols-2 gap-4">
                                            <input type="number" :name="`items[${index}][quantity]`" x-model="item.quantity"
                                                placeholder="Qty" class="col-span-2 border rounded px-2 py-1 text-sm" />
                                            @error('items.*.quantity')<p class="text-red-500 text-xs">{{ $message }}</p>
                                            @enderror

                                            <select :name="`items[${index}][unit]`" x-model="item.unit"
                                                class="col-span-2 border rounded px-2 py-1 text-sm">
                                                <option value="">Select Unit</option>
                                                <option value="piece">Piece</option>
                                                <option value="box">Box</option>
                                            </select>
                                            @error('items.*.unit')<p class="text-red-500 text-xs">{{ $message }}</p>
                                            @enderror

                                            <input type="number" :name="`items[${index}][discount]`" x-model="item.discount"
                                                placeholder="Discount" class="w-full border rounded px-2 py-1 text-sm" />
                                            @error('items.*.discount')<p class="text-red-500 text-xs">{{ $message }}</p>
                                            @enderror
                                        </div>
                                    </div>
                                </div>
                            </template>

                            <button type="button" @click="addItem"
                                class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                                + Add Product
                            </button>
                        </div>
                        <div>
                            <label>Notes</label>
                            <textarea rows="4" name="notes" class="w-full border rounded p-3 bg-gray-50"></textarea>
                            @error('notes')<p class="text-red-500 text-xs">{{ $message }}</p>@enderror
                        </div>

                        <!-- Pricing -->
                        <div class="bg-gray-50 rounded-lg p-4 border">
                            <h3 class="text-lg font-semibold text-gray-800 mb-3">Pricing Summary</h3>
                            <div class="grid grid-rows-3 gap-4">
                                <div>
                                    <label>Subtotal</label>
                                    <input type="text" name="subtotal" class="w-full border-b-2 py-1 px-1 bg-white">
                                    @error('subtotal')<p class="text-red-500 text-xs">{{ $message }}</p>@enderror

                                </div>
                                <div>
                                    <label>Tax</label>
                                    <input type="text" name="tax" class="w-full border-b-2 py-1 px-1 bg-white">
                                    @error('tax')<p class="text-red-500 text-xs">{{ $message }}</p>@enderror

                                </div>
                                <div>
                                    <label>Total</label>
                                    <input type="text" name="total"
                                        class="w-full border-b-2 py-1 px-1 bg-blue-50 font-medium">
                                    @error('tax')<p class="text-red-500 text-xs">{{ $message }}</p>@enderror

                                </div>
                            </div>
                        </div>

                        <!-- Submit -->
                        <div>
                            <button type="submit"
                                class="w-full bg-blue-600 hover:bg-blue-700 text-white py-3 rounded-lg shadow-md">
                                Generate Quotation
                            </button>
                        </div>
                    </form>
                </div>

                <!-- Right Column (Company Info) -->
                <div class="w-full flex flex-col gap-5 md:w-4/12">
                    <div class="bg-white border border-gray-200 rounded-xl p-6 shadow-sm">
                        <div class="flex flex-col items-center mb-6">
                            <div
                                class="w-24 h-24 bg-gray-100 rounded-full mb-4 flex items-center justify-center border-2 border-dashed">
                                <svg class="h-8 w-8 text-blue-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M13 10V3L4 14h7v7l9-11h-7z" />
                                </svg>
                            </div>
                            <h3 class="text-xl font-semibold">TechBazar</h3>
                            <p class="text-sm text-gray-600 mt-2">123 Business Street<br>Purnea, Bihar 854334<br>GSTIN:
                                22ABCDE1234F1Z5</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Alpine & Axios Scripts -->
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        document.addEventListener('alpine:init', () => {
            Alpine.data('quotationForm', () => ({
                items: [{
                    product_id: '',
                    description: '',
                    quantity: 1,
                    unit: 'piece',
                    mrp: '',
                    discount: 0
                }],
                products: [],

                init() {
                    // Fetch products list
                    axios.get('/products/json')
                        .then(res => this.products = res.data)
                        .catch(error => console.error('Error fetching products:', error));
                },

                fetchProductDetails(index) {
                    const productId = this.items[index].product_id;
                    if (!productId) return;

                    axios.get(`/products/${productId}/details`)
                        .then(res => {
                            this.items[index] = {
                                ...this.items[index],
                                description: res.data.description || '',
                                mrp: res.data.mrp || 0,
                                discount: res.data.discount || 0,
                                unit: res.data.unit || 'piece'
                            };
                        })
                        .catch(error => console.error('Error fetching product details:', error));
                },

                addItem() {
                    this.items.push({
                        product_id: '',
                        description: '',
                        quantity: 1,
                        unit: 'piece',
                        mrp: '',
                        discount: 0
                    });
                },

                duplicateItem(index) {
                    this.items.splice(index + 1, 0, { ...this.items[index] });
                },

                removeItem(index) {
                    if (this.items.length > 1) {
                        this.items.splice(index, 1);
                    }
                }
            }));
        });
        document.getElementById('customerSelect').addEventListener('change', function () {
            const customerId = this.value;

            if (!customerId) {
                document.getElementById('customer-info').classList.add('hidden');
                return;
            }

            fetch(`/customers/${customerId}/info`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('customer-address').textContent = data.address || 'N/A';
                    document.getElementById('customer-email').textContent = data.email || 'N/A';
                    document.getElementById('customer-phone').textContent = data.phone || 'N/A';
                    document.getElementById('customer-info').classList.remove('hidden');
                })
                .catch(error => {
                    console.error('Error fetching customer info:', error);
                });
        });

    </script>
@endsection